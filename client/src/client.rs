use std::net::SocketAddr;
use std::time::Instant;
use std::io;
use laminar::{ErrorKind, Packet, Socket, SocketEvent, Config};
use shared::{MessageType, MAGIC_BYTE, PlayerId};
use crate::feudle::Feudle;
use crossbeam_channel::Sender;
use std::{thread};
use std::sync::{Arc, Mutex};
use core::time;
use std::io::Write;
struct ClientState {
    id: PlayerId,
    ready: bool,
    game_started: bool,
    game_over: bool,
    word: String,
}

impl  ClientState {
    pub fn new() -> Self {
        ClientState {
            id: 0,
            ready: false,
            game_started: false,
            game_over: false,
            word: String::new(),
        }
    }

    pub fn set_ready(&mut self, ready: bool) {
        self.ready = ready;
    }

    pub fn get_ready(&self) -> bool {
        self.ready
    }

    pub fn set_game_started(&mut self, game_started: bool) {
        self.game_started = game_started;
    }

    pub fn get_game_started(&self) -> bool {
        self.game_started
    }

    pub fn set_id(&mut self, id: PlayerId) {
        self.id = id;
    }

    pub fn get_id(&self) -> PlayerId {
        self.id
    }

    pub fn set_game_over(&mut self, game_over: bool) {
        self.game_over = game_over;
    }

    pub fn get_game_over(&self) -> bool {
        self.game_over
    }

    pub fn set_word(&mut self, word: String) {
        self.word = word;
    }

    pub fn get_color_vec(&self, guess: String) -> Vec<char> {
        let uppercase_guess = guess.to_uppercase();
        let mut color_vec = Vec::new();
        for (i, c ) in uppercase_guess.chars().enumerate() {
            if self.word.contains(c) && self.word.to_string().chars().nth(i) == Some(c) {
                color_vec.push('G');
            }
            else if self.word.contains(c) && self.word.to_string().chars().nth(i) != Some(c) {
                color_vec.push('Y');
            }
            else {
                color_vec.push('_');
            }
        }
        color_vec
    }
}

// from https://github.com/scottluptowski/wordlet
pub fn dictionary_words(index: usize) -> String {
    let words = vec![
        "aback".to_string(),
        "abase".to_string(),
        "abate".to_string(),
        "abbey".to_string(),
        "abbot".to_string(),
        "abhor".to_string(),
        "abide".to_string(),
        "abled".to_string(),
        "abode".to_string(),
        "abort".to_string(),
        "about".to_string(),
        "above".to_string(),
        "abuse".to_string(),
        "abyss".to_string(),
        "acorn".to_string(),
        "acrid".to_string(),
        "actor".to_string(),
        "acute".to_string(),
        "adage".to_string(),
        "adapt".to_string(),
        "added".to_string(),
        "adept".to_string(),
        "adieu".to_string(),
        "admin".to_string(),
        "admit".to_string(),
        "adobe".to_string(),
        "adopt".to_string(),
        "adore".to_string(),
        "adorn".to_string(),
        "adult".to_string(),
        "affix".to_string(),
        "afire".to_string(),
        "afoot".to_string(),
        "afoul".to_string(),
        "after".to_string(),
        "again".to_string(),
        "agape".to_string(),
        "agate".to_string(),
        "agent".to_string(),
        "agile".to_string(),
        "aging".to_string(),
        "aglow".to_string(),
        "agony".to_string(),
        "agora".to_string(),
        "agree".to_string(),
        "ahead".to_string(),
        "aider".to_string(),
        "aisle".to_string(),
        "alarm".to_string(),
        "album".to_string(),
        "alert".to_string(),
        "algae".to_string(),
        "alibi".to_string(),
        "alien".to_string(),
        "align".to_string(),
        "alike".to_string(),
        "alive".to_string(),
        "allay".to_string(),
        "alley".to_string(),
        "allot".to_string(),
        "allow".to_string(),
        "alloy".to_string(),
        "aloft".to_string(),
        "alone".to_string(),
        "along".to_string(),
        "aloof".to_string(),
        "aloud".to_string(),
        "alpha".to_string(),
        "altar".to_string(),
        "alter".to_string(),
        "amass".to_string(),
        "amaze".to_string(),
        "amber".to_string(),
        "amble".to_string(),
        "amend".to_string(),
        "amiss".to_string(),
        "amity".to_string(),
        "among".to_string(),
        "ample".to_string(),
        "amply".to_string(),
        "amuse".to_string(),
        "angel".to_string(),
        "anger".to_string(),
        "angle".to_string(),
        "angry".to_string(),
        "angst".to_string(),
        "anime".to_string(),
        "ankle".to_string(),
        "annex".to_string(),
        "annoy".to_string(),
        "annul".to_string(),
        "anode".to_string(),
        "antic".to_string(),
        "anvil".to_string(),
        "aorta".to_string(),
        "apart".to_string(),
        "aphid".to_string(),
        "aping".to_string(),
        "apnea".to_string(),
        "apple".to_string(),
        "apply".to_string(),
        "apron".to_string(),
        "aptly".to_string(),
        "arbor".to_string(),
        "ardor".to_string(),
        "arena".to_string(),
        "argue".to_string(),
        "arise".to_string(),
        "armor".to_string(),
        "aroma".to_string(),
        "arose".to_string(),
        "array".to_string(),
        "arrow".to_string(),
        "arson".to_string(),
        "artsy".to_string(),
        "ascot".to_string(),
        "ashen".to_string(),
        "aside".to_string(),
        "askew".to_string(),
        "assay".to_string(),
        "asset".to_string(),
        "atoll".to_string(),
        "atone".to_string(),
        "attic".to_string(),
        "audio".to_string(),
        "audit".to_string(),
        "augur".to_string(),
        "aunty".to_string(),
        "avail".to_string(),
        "avert".to_string(),
        "avian".to_string(),
        "avoid".to_string(),
        "await".to_string(),
        "awake".to_string(),
        "award".to_string(),
        "aware".to_string(),
        "awash".to_string(),
        "awful".to_string(),
        "awoke".to_string(),
        "axial".to_string(),
        "axiom".to_string(),
        "axion".to_string(),
        "azure".to_string(),
        "bacon".to_string(),
        "badge".to_string(),
        "badly".to_string(),
        "bagel".to_string(),
        "baggy".to_string(),
        "baker".to_string(),
        "baler".to_string(),
        "balmy".to_string(),
        "banal".to_string(),
        "banjo".to_string(),
        "barge".to_string(),
        "baron".to_string(),
        "basal".to_string(),
        "basic".to_string(),
        "basil".to_string(),
        "basin".to_string(),
        "basis".to_string(),
        "baste".to_string(),
        "batch".to_string(),
        "bathe".to_string(),
        "baton".to_string(),
        "batty".to_string(),
        "bawdy".to_string(),
        "bayou".to_string(),
        "beach".to_string(),
        "beady".to_string(),
        "beard".to_string(),
        "beast".to_string(),
        "beech".to_string(),
        "beefy".to_string(),
        "befit".to_string(),
        "began".to_string(),
        "begat".to_string(),
        "beget".to_string(),
        "begin".to_string(),
        "begun".to_string(),
        "being".to_string(),
        "belch".to_string(),
        "belie".to_string(),
        "belle".to_string(),
        "belly".to_string(),
        "below".to_string(),
        "bench".to_string(),
        "beret".to_string(),
        "berry".to_string(),
        "berth".to_string(),
        "beset".to_string(),
        "betel".to_string(),
        "bevel".to_string(),
        "bezel".to_string(),
        "bible".to_string(),
        "bicep".to_string(),
        "biddy".to_string(),
        "bigot".to_string(),
        "bilge".to_string(),
        "billy".to_string(),
        "binge".to_string(),
        "bingo".to_string(),
        "biome".to_string(),
        "birch".to_string(),
        "birth".to_string(),
        "bison".to_string(),
        "bitty".to_string(),
        "black".to_string(),
        "blade".to_string(),
        "blame".to_string(),
        "bland".to_string(),
        "blank".to_string(),
        "blare".to_string(),
        "blast".to_string(),
        "blaze".to_string(),
        "bleak".to_string(),
        "bleat".to_string(),
        "bleed".to_string(),
        "bleep".to_string(),
        "blend".to_string(),
        "bless".to_string(),
        "blimp".to_string(),
        "blind".to_string(),
        "blink".to_string(),
        "bliss".to_string(),
        "blitz".to_string(),
        "bloat".to_string(),
        "block".to_string(),
        "bloke".to_string(),
        "blond".to_string(),
        "blood".to_string(),
        "bloom".to_string(),
        "blown".to_string(),
        "bluer".to_string(),
        "bluff".to_string(),
        "blunt".to_string(),
        "blurb".to_string(),
        "blurt".to_string(),
        "blush".to_string(),
        "board".to_string(),
        "boast".to_string(),
        "bobby".to_string(),
        "boney".to_string(),
        "bongo".to_string(),
        "bonus".to_string(),
        "booby".to_string(),
        "boost".to_string(),
        "booth".to_string(),
        "booty".to_string(),
        "booze".to_string(),
        "boozy".to_string(),
        "borax".to_string(),
        "borne".to_string(),
        "bosom".to_string(),
        "bossy".to_string(),
        "botch".to_string(),
        "bough".to_string(),
        "boule".to_string(),
        "bound".to_string(),
        "bowel".to_string(),
        "boxer".to_string(),
        "brace".to_string(),
        "braid".to_string(),
        "brain".to_string(),
        "brake".to_string(),
        "brand".to_string(),
        "brash".to_string(),
        "brass".to_string(),
        "brave".to_string(),
        "bravo".to_string(),
        "brawl".to_string(),
        "brawn".to_string(),
        "bread".to_string(),
        "break".to_string(),
        "breed".to_string(),
        "briar".to_string(),
        "bribe".to_string(),
        "brick".to_string(),
        "bride".to_string(),
        "brief".to_string(),
        "brine".to_string(),
        "bring".to_string(),
        "brink".to_string(),
        "briny".to_string(),
        "brisk".to_string(),
        "broad".to_string(),
        "broil".to_string(),
        "broke".to_string(),
        "brood".to_string(),
        "brook".to_string(),
        "broom".to_string(),
        "broth".to_string(),
        "brown".to_string(),
        "brunt".to_string(),
        "brush".to_string(),
        "brute".to_string(),
        "buddy".to_string(),
        "budge".to_string(),
        "buggy".to_string(),
        "bugle".to_string(),
        "build".to_string(),
        "built".to_string(),
        "bulge".to_string(),
        "bulky".to_string(),
        "bully".to_string(),
        "bunch".to_string(),
        "bunny".to_string(),
        "burly".to_string(),
        "burnt".to_string(),
        "burst".to_string(),
        "bused".to_string(),
        "bushy".to_string(),
        "butch".to_string(),
        "butte".to_string(),
        "buxom".to_string(),
        "buyer".to_string(),
        "bylaw".to_string(),
        "cabal".to_string(),
        "cabby".to_string(),
        "cabin".to_string(),
        "cable".to_string(),
        "cacao".to_string(),
        "cache".to_string(),
        "cacti".to_string(),
        "caddy".to_string(),
        "cadet".to_string(),
        "cagey".to_string(),
        "cairn".to_string(),
        "camel".to_string(),
        "cameo".to_string(),
        "canal".to_string(),
        "candy".to_string(),
        "canny".to_string(),
        "canoe".to_string(),
        "canon".to_string(),
        "caper".to_string(),
        "caput".to_string(),
        "carat".to_string(),
        "cargo".to_string(),
        "carol".to_string(),
        "carry".to_string(),
        "carve".to_string(),
        "caste".to_string(),
        "catch".to_string(),
        "cater".to_string(),
        "catty".to_string(),
        "caulk".to_string(),
        "cause".to_string(),
        "cavil".to_string(),
        "cease".to_string(),
        "cedar".to_string(),
        "cello".to_string(),
        "chafe".to_string(),
        "chaff".to_string(),
        "chain".to_string(),
        "chair".to_string(),
        "chalk".to_string(),
        "champ".to_string(),
        "chant".to_string(),
        "chaos".to_string(),
        "chard".to_string(),
        "charm".to_string(),
        "chart".to_string(),
        "chase".to_string(),
        "chasm".to_string(),
        "cheap".to_string(),
        "cheat".to_string(),
        "check".to_string(),
        "cheek".to_string(),
        "cheer".to_string(),
        "chess".to_string(),
        "chest".to_string(),
        "chick".to_string(),
        "chide".to_string(),
        "chief".to_string(),
        "child".to_string(),
        "chili".to_string(),
        "chill".to_string(),
        "chime".to_string(),
        "china".to_string(),
        "chirp".to_string(),
        "chock".to_string(),
        "choir".to_string(),
        "choke".to_string(),
        "chord".to_string(),
        "chore".to_string(),
        "chose".to_string(),
        "chuck".to_string(),
        "chump".to_string(),
        "chunk".to_string(),
        "churn".to_string(),
        "chute".to_string(),
        "cider".to_string(),
        "cigar".to_string(),
        "cinch".to_string(),
        "circa".to_string(),
        "civic".to_string(),
        "civil".to_string(),
        "clack".to_string(),
        "claim".to_string(),
        "clamp".to_string(),
        "clang".to_string(),
        "clank".to_string(),
        "clash".to_string(),
        "clasp".to_string(),
        "class".to_string(),
        "clean".to_string(),
        "clear".to_string(),
        "cleat".to_string(),
        "cleft".to_string(),
        "clerk".to_string(),
        "click".to_string(),
        "cliff".to_string(),
        "climb".to_string(),
        "cling".to_string(),
        "clink".to_string(),
        "cloak".to_string(),
        "clock".to_string(),
        "clone".to_string(),
        "close".to_string(),
        "cloth".to_string(),
        "cloud".to_string(),
        "clout".to_string(),
        "clove".to_string(),
        "clown".to_string(),
        "cluck".to_string(),
        "clued".to_string(),
        "clump".to_string(),
        "clung".to_string(),
        "coach".to_string(),
        "coast".to_string(),
        "cobra".to_string(),
        "cocoa".to_string(),
        "colon".to_string(),
        "color".to_string(),
        "comet".to_string(),
        "comfy".to_string(),
        "comic".to_string(),
        "comma".to_string(),
        "conch".to_string(),
        "condo".to_string(),
        "conic".to_string(),
        "copse".to_string(),
        "coral".to_string(),
        "corer".to_string(),
        "corny".to_string(),
        "couch".to_string(),
        "cough".to_string(),
        "could".to_string(),
        "count".to_string(),
        "coupe".to_string(),
        "court".to_string(),
        "coven".to_string(),
        "cover".to_string(),
        "covet".to_string(),
        "covey".to_string(),
        "cower".to_string(),
        "coyly".to_string(),
        "crack".to_string(),
        "craft".to_string(),
        "cramp".to_string(),
        "crane".to_string(),
        "crank".to_string(),
        "crash".to_string(),
        "crass".to_string(),
        "crate".to_string(),
        "crave".to_string(),
        "crawl".to_string(),
        "craze".to_string(),
        "crazy".to_string(),
        "creak".to_string(),
        "cream".to_string(),
        "credo".to_string(),
        "creed".to_string(),
        "creek".to_string(),
        "creep".to_string(),
        "creme".to_string(),
        "crepe".to_string(),
        "crept".to_string(),
        "cress".to_string(),
        "crest".to_string(),
        "crick".to_string(),
        "cried".to_string(),
        "crier".to_string(),
        "crime".to_string(),
        "crimp".to_string(),
        "crisp".to_string(),
        "croak".to_string(),
        "crock".to_string(),
        "crone".to_string(),
        "crony".to_string(),
        "crook".to_string(),
        "cross".to_string(),
        "croup".to_string(),
        "crowd".to_string(),
        "crown".to_string(),
        "crude".to_string(),
        "cruel".to_string(),
        "crumb".to_string(),
        "crump".to_string(),
        "crush".to_string(),
        "crust".to_string(),
        "crypt".to_string(),
        "cubic".to_string(),
        "cumin".to_string(),
        "curio".to_string(),
        "curly".to_string(),
        "curry".to_string(),
        "curse".to_string(),
        "curve".to_string(),
        "curvy".to_string(),
        "cutie".to_string(),
        "cyber".to_string(),
        "cycle".to_string(),
        "cynic".to_string(),
        "daddy".to_string(),
        "daily".to_string(),
        "dairy".to_string(),
        "daisy".to_string(),
        "dally".to_string(),
        "dance".to_string(),
        "dandy".to_string(),
        "datum".to_string(),
        "daunt".to_string(),
        "dealt".to_string(),
        "death".to_string(),
        "debar".to_string(),
        "debit".to_string(),
        "debug".to_string(),
        "debut".to_string(),
        "decal".to_string(),
        "decay".to_string(),
        "decor".to_string(),
        "decoy".to_string(),
        "decry".to_string(),
        "defer".to_string(),
        "deign".to_string(),
        "deity".to_string(),
        "delay".to_string(),
        "delta".to_string(),
        "delve".to_string(),
        "demon".to_string(),
        "demur".to_string(),
        "denim".to_string(),
        "dense".to_string(),
        "depot".to_string(),
        "depth".to_string(),
        "derby".to_string(),
        "deter".to_string(),
        "detox".to_string(),
        "deuce".to_string(),
        "devil".to_string(),
        "diary".to_string(),
        "dicey".to_string(),
        "digit".to_string(),
        "dilly".to_string(),
        "dimly".to_string(),
        "diner".to_string(),
        "dingo".to_string(),
        "dingy".to_string(),
        "diode".to_string(),
        "dirge".to_string(),
        "dirty".to_string(),
        "disco".to_string(),
        "ditch".to_string(),
        "ditto".to_string(),
        "ditty".to_string(),
        "diver".to_string(),
        "dizzy".to_string(),
        "dodge".to_string(),
        "dodgy".to_string(),
        "dogma".to_string(),
        "doing".to_string(),
        "dolly".to_string(),
        "donor".to_string(),
        "donut".to_string(),
        "dopey".to_string(),
        "doubt".to_string(),
        "dough".to_string(),
        "dowdy".to_string(),
        "dowel".to_string(),
        "downy".to_string(),
        "dowry".to_string(),
        "dozen".to_string(),
        "draft".to_string(),
        "drain".to_string(),
        "drake".to_string(),
        "drama".to_string(),
        "drank".to_string(),
        "drape".to_string(),
        "drawl".to_string(),
        "drawn".to_string(),
        "dread".to_string(),
        "dream".to_string(),
        "dress".to_string(),
        "dried".to_string(),
        "drier".to_string(),
        "drift".to_string(),
        "drill".to_string(),
        "drink".to_string(),
        "drive".to_string(),
        "droit".to_string(),
        "droll".to_string(),
        "drone".to_string(),
        "drool".to_string(),
        "droop".to_string(),
        "dross".to_string(),
        "drove".to_string(),
        "drown".to_string(),
        "druid".to_string(),
        "drunk".to_string(),
        "dryer".to_string(),
        "dryly".to_string(),
        "duchy".to_string(),
        "dully".to_string(),
        "dummy".to_string(),
        "dumpy".to_string(),
        "dunce".to_string(),
        "dusky".to_string(),
        "dusty".to_string(),
        "dutch".to_string(),
        "duvet".to_string(),
        "dwarf".to_string(),
        "dwell".to_string(),
        "dwelt".to_string(),
        "dying".to_string(),
        "eager".to_string(),
        "eagle".to_string(),
        "early".to_string(),
        "earth".to_string(),
        "easel".to_string(),
        "eaten".to_string(),
        "eater".to_string(),
        "ebony".to_string(),
        "eclat".to_string(),
        "edict".to_string(),
        "edify".to_string(),
        "eerie".to_string(),
        "egret".to_string(),
        "eight".to_string(),
        "eject".to_string(),
        "eking".to_string(),
        "elate".to_string(),
        "elbow".to_string(),
        "elder".to_string(),
        "elect".to_string(),
        "elegy".to_string(),
        "elfin".to_string(),
        "elide".to_string(),
        "elite".to_string(),
        "elope".to_string(),
        "elude".to_string(),
        "email".to_string(),
        "embed".to_string(),
        "ember".to_string(),
        "emcee".to_string(),
        "empty".to_string(),
        "enact".to_string(),
        "endow".to_string(),
        "enema".to_string(),
        "enemy".to_string(),
        "enjoy".to_string(),
        "ennui".to_string(),
        "ensue".to_string(),
        "enter".to_string(),
        "entry".to_string(),
        "envoy".to_string(),
        "epoch".to_string(),
        "epoxy".to_string(),
        "equal".to_string(),
        "equip".to_string(),
        "erase".to_string(),
        "erect".to_string(),
        "erode".to_string(),
        "error".to_string(),
        "erupt".to_string(),
        "essay".to_string(),
        "ester".to_string(),
        "ether".to_string(),
        "ethic".to_string(),
        "ethos".to_string(),
        "etude".to_string(),
        "evade".to_string(),
        "event".to_string(),
        "every".to_string(),
        "evict".to_string(),
        "evoke".to_string(),
        "exact".to_string(),
        "exalt".to_string(),
        "excel".to_string(),
        "exert".to_string(),
        "exile".to_string(),
        "exist".to_string(),
        "expel".to_string(),
        "extol".to_string(),
        "extra".to_string(),
        "exult".to_string(),
        "eying".to_string(),
        "fable".to_string(),
        "facet".to_string(),
        "faint".to_string(),
        "fairy".to_string(),
        "faith".to_string(),
        "false".to_string(),
        "fancy".to_string(),
        "fanny".to_string(),
        "farce".to_string(),
        "fatal".to_string(),
        "fatty".to_string(),
        "fault".to_string(),
        "fauna".to_string(),
        "favor".to_string(),
        "feast".to_string(),
        "fecal".to_string(),
        "feign".to_string(),
        "fella".to_string(),
        "felon".to_string(),
        "femme".to_string(),
        "femur".to_string(),
        "fence".to_string(),
        "feral".to_string(),
        "ferry".to_string(),
        "fetal".to_string(),
        "fetch".to_string(),
        "fetid".to_string(),
        "fetus".to_string(),
        "fever".to_string(),
        "fewer".to_string(),
        "fiber".to_string(),
        "fibre".to_string(),
        "ficus".to_string(),
        "field".to_string(),
        "fiend".to_string(),
        "fiery".to_string(),
        "fifth".to_string(),
        "fifty".to_string(),
        "fight".to_string(),
        "filer".to_string(),
        "filet".to_string(),
        "filly".to_string(),
        "filmy".to_string(),
        "filth".to_string(),
        "final".to_string(),
        "finch".to_string(),
        "finer".to_string(),
        "first".to_string(),
        "fishy".to_string(),
        "fixer".to_string(),
        "fizzy".to_string(),
        "fjord".to_string(),
        "flack".to_string(),
        "flail".to_string(),
        "flair".to_string(),
        "flake".to_string(),
        "flaky".to_string(),
        "flame".to_string(),
        "flank".to_string(),
        "flare".to_string(),
        "flash".to_string(),
        "flask".to_string(),
        "fleck".to_string(),
        "fleet".to_string(),
        "flesh".to_string(),
        "flick".to_string(),
        "flier".to_string(),
        "fling".to_string(),
        "flint".to_string(),
        "flirt".to_string(),
        "float".to_string(),
        "flock".to_string(),
        "flood".to_string(),
        "floor".to_string(),
        "flora".to_string(),
        "floss".to_string(),
        "flour".to_string(),
        "flout".to_string(),
        "flown".to_string(),
        "fluff".to_string(),
        "fluid".to_string(),
        "fluke".to_string(),
        "flume".to_string(),
        "flung".to_string(),
        "flunk".to_string(),
        "flush".to_string(),
        "flute".to_string(),
        "flyer".to_string(),
        "foamy".to_string(),
        "focal".to_string(),
        "focus".to_string(),
        "foggy".to_string(),
        "foist".to_string(),
        "folio".to_string(),
        "folly".to_string(),
        "foray".to_string(),
        "force".to_string(),
        "forge".to_string(),
        "forgo".to_string(),
        "forte".to_string(),
        "forth".to_string(),
        "forty".to_string(),
        "forum".to_string(),
        "found".to_string(),
        "foyer".to_string(),
        "frail".to_string(),
        "frame".to_string(),
        "frank".to_string(),
        "fraud".to_string(),
        "freak".to_string(),
        "freed".to_string(),
        "freer".to_string(),
        "fresh".to_string(),
        "friar".to_string(),
        "fried".to_string(),
        "frill".to_string(),
        "frisk".to_string(),
        "fritz".to_string(),
        "frock".to_string(),
        "frond".to_string(),
        "front".to_string(),
        "frost".to_string(),
        "froth".to_string(),
        "frown".to_string(),
        "froze".to_string(),
        "fruit".to_string(),
        "fudge".to_string(),
        "fugue".to_string(),
        "fully".to_string(),
        "fungi".to_string(),
        "funky".to_string(),
        "funny".to_string(),
        "furor".to_string(),
        "furry".to_string(),
        "fussy".to_string(),
        "fuzzy".to_string(),
        "gaffe".to_string(),
        "gaily".to_string(),
        "gamer".to_string(),
        "gamma".to_string(),
        "gamut".to_string(),
        "gassy".to_string(),
        "gaudy".to_string(),
        "gauge".to_string(),
        "gaunt".to_string(),
        "gauze".to_string(),
        "gavel".to_string(),
        "gawky".to_string(),
        "gayer".to_string(),
        "gayly".to_string(),
        "gazer".to_string(),
        "gecko".to_string(),
        "geeky".to_string(),
        "geese".to_string(),
        "genie".to_string(),
        "genre".to_string(),
        "ghost".to_string(),
        "ghoul".to_string(),
        "giant".to_string(),
        "giddy".to_string(),
        "gipsy".to_string(),
        "girly".to_string(),
        "girth".to_string(),
        "given".to_string(),
        "giver".to_string(),
        "glade".to_string(),
        "gland".to_string(),
        "glare".to_string(),
        "glass".to_string(),
        "glaze".to_string(),
        "gleam".to_string(),
        "glean".to_string(),
        "glide".to_string(),
        "glint".to_string(),
        "gloat".to_string(),
        "globe".to_string(),
        "gloom".to_string(),
        "glory".to_string(),
        "gloss".to_string(),
        "glove".to_string(),
        "glyph".to_string(),
        "gnash".to_string(),
        "gnome".to_string(),
        "godly".to_string(),
        "going".to_string(),
        "golem".to_string(),
        "golly".to_string(),
        "gonad".to_string(),
        "goner".to_string(),
        "goody".to_string(),
        "gooey".to_string(),
        "goofy".to_string(),
        "goose".to_string(),
        "gorge".to_string(),
        "gouge".to_string(),
        "gourd".to_string(),
        "grace".to_string(),
        "grade".to_string(),
        "graft".to_string(),
        "grail".to_string(),
        "grain".to_string(),
        "grand".to_string(),
        "grant".to_string(),
        "grape".to_string(),
        "graph".to_string(),
        "grasp".to_string(),
        "grass".to_string(),
        "grate".to_string(),
        "grave".to_string(),
        "gravy".to_string(),
        "graze".to_string(),
        "great".to_string(),
        "greed".to_string(),
        "green".to_string(),
        "greet".to_string(),
        "grief".to_string(),
        "grift".to_string(),
        "grill".to_string(),
        "grime".to_string(),
        "grimy".to_string(),
        "grind".to_string(),
        "gripe".to_string(),
        "groan".to_string(),
        "groin".to_string(),
        "groom".to_string(),
        "grope".to_string(),
        "gross".to_string(),
        "group".to_string(),
        "grout".to_string(),
        "grove".to_string(),
        "growl".to_string(),
        "grown".to_string(),
        "gruel".to_string(),
        "gruff".to_string(),
        "grunt".to_string(),
        "guard".to_string(),
        "guava".to_string(),
        "guess".to_string(),
        "guest".to_string(),
        "guide".to_string(),
        "guild".to_string(),
        "guile".to_string(),
        "guilt".to_string(),
        "guise".to_string(),
        "gulch".to_string(),
        "gully".to_string(),
        "gumbo".to_string(),
        "gummy".to_string(),
        "guppy".to_string(),
        "gusto".to_string(),
        "gusty".to_string(),
        "gypsy".to_string(),
        "habit".to_string(),
        "hairy".to_string(),
        "halve".to_string(),
        "handy".to_string(),
        "happy".to_string(),
        "hardy".to_string(),
        "harem".to_string(),
        "harpy".to_string(),
        "harry".to_string(),
        "harsh".to_string(),
        "haste".to_string(),
        "hasty".to_string(),
        "hatch".to_string(),
        "hater".to_string(),
        "haunt".to_string(),
        "haute".to_string(),
        "haven".to_string(),
        "havoc".to_string(),
        "hazel".to_string(),
        "heady".to_string(),
        "heard".to_string(),
        "heart".to_string(),
        "heath".to_string(),
        "heave".to_string(),
        "heavy".to_string(),
        "hedge".to_string(),
        "hefty".to_string(),
        "heist".to_string(),
        "helix".to_string(),
        "hello".to_string(),
        "hence".to_string(),
        "heron".to_string(),
        "hilly".to_string(),
        "hinge".to_string(),
        "hippo".to_string(),
        "hippy".to_string(),
        "hitch".to_string(),
        "hoard".to_string(),
        "hobby".to_string(),
        "hoist".to_string(),
        "holly".to_string(),
        "homer".to_string(),
        "honey".to_string(),
        "honor".to_string(),
        "horde".to_string(),
        "horny".to_string(),
        "horse".to_string(),
        "hotel".to_string(),
        "hotly".to_string(),
        "hound".to_string(),
        "hours".to_string(),
        "house".to_string(),
        "hovel".to_string(),
        "hover".to_string(),
        "howdy".to_string(),
        "human".to_string(),
        "humid".to_string(),
        "humor".to_string(),
        "humph".to_string(),
        "humus".to_string(),
        "hunch".to_string(),
        "hunky".to_string(),
        "hurry".to_string(),
        "husky".to_string(),
        "hussy".to_string(),
        "hutch".to_string(),
        "hydro".to_string(),
        "hyena".to_string(),
        "hymen".to_string(),
        "hyper".to_string(),
        "icily".to_string(),
        "icing".to_string(),
        "ideal".to_string(),
        "idiom".to_string(),
        "idiot".to_string(),
        "idler".to_string(),
        "idyll".to_string(),
        "igloo".to_string(),
        "iliac".to_string(),
        "image".to_string(),
        "imbue".to_string(),
        "impel".to_string(),
        "imply".to_string(),
        "inane".to_string(),
        "inbox".to_string(),
        "incur".to_string(),
        "index".to_string(),
        "inept".to_string(),
        "inert".to_string(),
        "infer".to_string(),
        "ingot".to_string(),
        "inlay".to_string(),
        "inlet".to_string(),
        "inner".to_string(),
        "input".to_string(),
        "inter".to_string(),
        "intro".to_string(),
        "ionic".to_string(),
        "irate".to_string(),
        "irony".to_string(),
        "islet".to_string(),
        "issue".to_string(),
        "itchy".to_string(),
        "ivory".to_string(),
        "jaunt".to_string(),
        "jazzy".to_string(),
        "jelly".to_string(),
        "jerky".to_string(),
        "jetty".to_string(),
        "jewel".to_string(),
        "jiffy".to_string(),
        "joint".to_string(),
        "joist".to_string(),
        "joker".to_string(),
        "jolly".to_string(),
        "joust".to_string(),
        "judge".to_string(),
        "juice".to_string(),
        "juicy".to_string(),
        "jumbo".to_string(),
        "jumpy".to_string(),
        "junta".to_string(),
        "junto".to_string(),
        "juror".to_string(),
        "kappa".to_string(),
        "karma".to_string(),
        "kayak".to_string(),
        "kebab".to_string(),
        "khaki".to_string(),
        "kinky".to_string(),
        "kiosk".to_string(),
        "kitty".to_string(),
        "knack".to_string(),
        "knave".to_string(),
        "knead".to_string(),
        "kneed".to_string(),
        "kneel".to_string(),
        "knelt".to_string(),
        "knife".to_string(),
        "knock".to_string(),
        "knoll".to_string(),
        "known".to_string(),
        "koala".to_string(),
        "krill".to_string(),
        "label".to_string(),
        "labor".to_string(),
        "laden".to_string(),
        "ladle".to_string(),
        "lager".to_string(),
        "lance".to_string(),
        "lanky".to_string(),
        "lapel".to_string(),
        "lapse".to_string(),
        "large".to_string(),
        "larva".to_string(),
        "lasso".to_string(),
        "latch".to_string(),
        "later".to_string(),
        "lathe".to_string(),
        "latte".to_string(),
        "laugh".to_string(),
        "layer".to_string(),
        "leach".to_string(),
        "leafy".to_string(),
        "leaky".to_string(),
        "leant".to_string(),
        "leapt".to_string(),
        "learn".to_string(),
        "lease".to_string(),
        "leash".to_string(),
        "least".to_string(),
        "leave".to_string(),
        "ledge".to_string(),
        "leech".to_string(),
        "leery".to_string(),
        "lefty".to_string(),
        "legal".to_string(),
        "leggy".to_string(),
        "lemon".to_string(),
        "lemur".to_string(),
        "leper".to_string(),
        "level".to_string(),
        "lever".to_string(),
        "libel".to_string(),
        "liege".to_string(),
        "light".to_string(),
        "liken".to_string(),
        "lilac".to_string(),
        "limbo".to_string(),
        "limit".to_string(),
        "linen".to_string(),
        "liner".to_string(),
        "lingo".to_string(),
        "lipid".to_string(),
        "lithe".to_string(),
        "liver".to_string(),
        "livid".to_string(),
        "llama".to_string(),
        "loamy".to_string(),
        "loath".to_string(),
        "lobby".to_string(),
        "local".to_string(),
        "locus".to_string(),
        "lodge".to_string(),
        "lofty".to_string(),
        "logic".to_string(),
        "login".to_string(),
        "loopy".to_string(),
        "loose".to_string(),
        "lorry".to_string(),
        "loser".to_string(),
        "louse".to_string(),
        "lousy".to_string(),
        "lover".to_string(),
        "lower".to_string(),
        "lowly".to_string(),
        "loyal".to_string(),
        "lucid".to_string(),
        "lucky".to_string(),
        "lumen".to_string(),
        "lumpy".to_string(),
        "lunar".to_string(),
        "lunch".to_string(),
        "lunge".to_string(),
        "lupus".to_string(),
        "lurch".to_string(),
        "lurid".to_string(),
        "lusty".to_string(),
        "lying".to_string(),
        "lymph".to_string(),
        "lynch".to_string(),
        "lyric".to_string(),
        "macaw".to_string(),
        "macho".to_string(),
        "macro".to_string(),
        "madam".to_string(),
        "madly".to_string(),
        "mafia".to_string(),
        "magic".to_string(),
        "magma".to_string(),
        "maize".to_string(),
        "major".to_string(),
        "maker".to_string(),
        "mambo".to_string(),
        "mamma".to_string(),
        "mammy".to_string(),
        "manga".to_string(),
        "mange".to_string(),
        "mango".to_string(),
        "mangy".to_string(),
        "mania".to_string(),
        "manic".to_string(),
        "manly".to_string(),
        "manor".to_string(),
        "maple".to_string(),
        "march".to_string(),
        "marry".to_string(),
        "marsh".to_string(),
        "mason".to_string(),
        "masse".to_string(),
        "match".to_string(),
        "matey".to_string(),
        "mauve".to_string(),
        "maxim".to_string(),
        "maybe".to_string(),
        "mayor".to_string(),
        "mealy".to_string(),
        "meant".to_string(),
        "meaty".to_string(),
        "mecca".to_string(),
        "medal".to_string(),
        "media".to_string(),
        "medic".to_string(),
        "melee".to_string(),
        "melon".to_string(),
        "mercy".to_string(),
        "merge".to_string(),
        "merit".to_string(),
        "merry".to_string(),
        "metal".to_string(),
        "meter".to_string(),
        "metro".to_string(),
        "micro".to_string(),
        "midge".to_string(),
        "midst".to_string(),
        "might".to_string(),
        "milky".to_string(),
        "mimic".to_string(),
        "mince".to_string(),
        "miner".to_string(),
        "minim".to_string(),
        "minor".to_string(),
        "minty".to_string(),
        "minus".to_string(),
        "mirth".to_string(),
        "miser".to_string(),
        "missy".to_string(),
        "mocha".to_string(),
        "modal".to_string(),
        "model".to_string(),
        "modem".to_string(),
        "mogul".to_string(),
        "moist".to_string(),
        "molar".to_string(),
        "moldy".to_string(),
        "money".to_string(),
        "month".to_string(),
        "moody".to_string(),
        "moose".to_string(),
        "moral".to_string(),
        "moron".to_string(),
        "morph".to_string(),
        "mossy".to_string(),
        "motel".to_string(),
        "motif".to_string(),
        "motor".to_string(),
        "motto".to_string(),
        "moult".to_string(),
        "mound".to_string(),
        "mount".to_string(),
        "mourn".to_string(),
        "mouse".to_string(),
        "mouth".to_string(),
        "mover".to_string(),
        "movie".to_string(),
        "mower".to_string(),
        "mucky".to_string(),
        "mucus".to_string(),
        "muddy".to_string(),
        "mulch".to_string(),
        "mummy".to_string(),
        "munch".to_string(),
        "mural".to_string(),
        "murky".to_string(),
        "mushy".to_string(),
        "music".to_string(),
        "musky".to_string(),
        "musty".to_string(),
        "myrrh".to_string(),
        "nadir".to_string(),
        "naive".to_string(),
        "nanny".to_string(),
        "nasal".to_string(),
        "nasty".to_string(),
        "natal".to_string(),
        "naval".to_string(),
        "navel".to_string(),
        "needy".to_string(),
        "neigh".to_string(),
        "nerdy".to_string(),
        "nerve".to_string(),
        "never".to_string(),
        "newer".to_string(),
        "newly".to_string(),
        "nicer".to_string(),
        "niche".to_string(),
        "niece".to_string(),
        "night".to_string(),
        "ninja".to_string(),
        "ninny".to_string(),
        "ninth".to_string(),
        "noble".to_string(),
        "nobly".to_string(),
        "noise".to_string(),
        "noisy".to_string(),
        "nomad".to_string(),
        "noose".to_string(),
        "north".to_string(),
        "nosey".to_string(),
        "notch".to_string(),
        "novel".to_string(),
        "nudge".to_string(),
        "nurse".to_string(),
        "nutty".to_string(),
        "nylon".to_string(),
        "nymph".to_string(),
        "oaken".to_string(),
        "obese".to_string(),
        "occur".to_string(),
        "ocean".to_string(),
        "octal".to_string(),
        "octet".to_string(),
        "odder".to_string(),
        "oddly".to_string(),
        "offal".to_string(),
        "offer".to_string(),
        "often".to_string(),
        "olden".to_string(),
        "older".to_string(),
        "olive".to_string(),
        "ombre".to_string(),
        "omega".to_string(),
        "onion".to_string(),
        "onset".to_string(),
        "opera".to_string(),
        "opine".to_string(),
        "opium".to_string(),
        "optic".to_string(),
        "orbit".to_string(),
        "order".to_string(),
        "organ".to_string(),
        "other".to_string(),
        "otter".to_string(),
        "ought".to_string(),
        "ounce".to_string(),
        "outdo".to_string(),
        "outer".to_string(),
        "outgo".to_string(),
        "ovary".to_string(),
        "ovate".to_string(),
        "overt".to_string(),
        "ovine".to_string(),
        "ovoid".to_string(),
        "owing".to_string(),
        "owner".to_string(),
        "oxide".to_string(),
        "ozone".to_string(),
        "paddy".to_string(),
        "pagan".to_string(),
        "paint".to_string(),
        "paler".to_string(),
        "palsy".to_string(),
        "panel".to_string(),
        "panic".to_string(),
        "pansy".to_string(),
        "papal".to_string(),
        "paper".to_string(),
        "parer".to_string(),
        "parka".to_string(),
        "parry".to_string(),
        "parse".to_string(),
        "party".to_string(),
        "pasta".to_string(),
        "paste".to_string(),
        "pasty".to_string(),
        "patch".to_string(),
        "patio".to_string(),
        "patsy".to_string(),
        "patty".to_string(),
        "pause".to_string(),
        "payee".to_string(),
        "payer".to_string(),
        "peace".to_string(),
        "peach".to_string(),
        "pearl".to_string(),
        "pecan".to_string(),
        "pedal".to_string(),
        "penal".to_string(),
        "pence".to_string(),
        "penne".to_string(),
        "penny".to_string(),
        "perch".to_string(),
        "peril".to_string(),
        "perky".to_string(),
        "pesky".to_string(),
        "pesto".to_string(),
        "petal".to_string(),
        "petty".to_string(),
        "phase".to_string(),
        "phone".to_string(),
        "phony".to_string(),
        "photo".to_string(),
        "piano".to_string(),
        "picky".to_string(),
        "piece".to_string(),
        "piety".to_string(),
        "piggy".to_string(),
        "pilot".to_string(),
        "pinch".to_string(),
        "piney".to_string(),
        "pinky".to_string(),
        "pinto".to_string(),
        "piper".to_string(),
        "pique".to_string(),
        "pitch".to_string(),
        "pithy".to_string(),
        "pivot".to_string(),
        "pixel".to_string(),
        "pixie".to_string(),
        "pizza".to_string(),
        "place".to_string(),
        "plaid".to_string(),
        "plain".to_string(),
        "plait".to_string(),
        "plane".to_string(),
        "plank".to_string(),
        "plant".to_string(),
        "plate".to_string(),
        "plaza".to_string(),
        "plead".to_string(),
        "pleat".to_string(),
        "plied".to_string(),
        "plier".to_string(),
        "pluck".to_string(),
        "plumb".to_string(),
        "plume".to_string(),
        "plump".to_string(),
        "plunk".to_string(),
        "plush".to_string(),
        "poesy".to_string(),
        "point".to_string(),
        "poise".to_string(),
        "poker".to_string(),
        "polar".to_string(),
        "polka".to_string(),
        "polyp".to_string(),
        "pooch".to_string(),
        "poppy".to_string(),
        "porch".to_string(),
        "poser".to_string(),
        "posit".to_string(),
        "posse".to_string(),
        "pouch".to_string(),
        "pound".to_string(),
        "pouty".to_string(),
        "power".to_string(),
        "prank".to_string(),
        "prawn".to_string(),
        "preen".to_string(),
        "press".to_string(),
        "price".to_string(),
        "prick".to_string(),
        "pride".to_string(),
        "pried".to_string(),
        "prime".to_string(),
        "primo".to_string(),
        "print".to_string(),
        "prior".to_string(),
        "prism".to_string(),
        "privy".to_string(),
        "prize".to_string(),
        "probe".to_string(),
        "prone".to_string(),
        "prong".to_string(),
        "proof".to_string(),
        "prose".to_string(),
        "proud".to_string(),
        "prove".to_string(),
        "prowl".to_string(),
        "proxy".to_string(),
        "prude".to_string(),
        "prune".to_string(),
        "psalm".to_string(),
        "pubic".to_string(),
        "pudgy".to_string(),
        "puffy".to_string(),
        "pulpy".to_string(),
        "pulse".to_string(),
        "punch".to_string(),
        "pupal".to_string(),
        "pupil".to_string(),
        "puppy".to_string(),
        "puree".to_string(),
        "purer".to_string(),
        "purge".to_string(),
        "purse".to_string(),
        "pushy".to_string(),
        "putty".to_string(),
        "pygmy".to_string(),
        "quack".to_string(),
        "quail".to_string(),
        "quake".to_string(),
        "qualm".to_string(),
        "quark".to_string(),
        "quart".to_string(),
        "quash".to_string(),
        "quasi".to_string(),
        "queen".to_string(),
        "queer".to_string(),
        "quell".to_string(),
        "query".to_string(),
        "quest".to_string(),
        "queue".to_string(),
        "quick".to_string(),
        "quiet".to_string(),
        "quill".to_string(),
        "quilt".to_string(),
        "quirk".to_string(),
        "quite".to_string(),
        "quota".to_string(),
        "quote".to_string(),
        "quoth".to_string(),
        "rabbi".to_string(),
        "rabid".to_string(),
        "racer".to_string(),
        "radar".to_string(),
        "radii".to_string(),
        "radio".to_string(),
        "rainy".to_string(),
        "raise".to_string(),
        "rajah".to_string(),
        "rally".to_string(),
        "ralph".to_string(),
        "ramen".to_string(),
        "ranch".to_string(),
        "randy".to_string(),
        "range".to_string(),
        "rapid".to_string(),
        "rarer".to_string(),
        "raspy".to_string(),
        "ratio".to_string(),
        "ratty".to_string(),
        "raven".to_string(),
        "rayon".to_string(),
        "razor".to_string(),
        "reach".to_string(),
        "react".to_string(),
        "ready".to_string(),
        "realm".to_string(),
        "rearm".to_string(),
        "rebar".to_string(),
        "rebel".to_string(),
        "rebus".to_string(),
        "rebut".to_string(),
        "recap".to_string(),
        "recur".to_string(),
        "recut".to_string(),
        "reedy".to_string(),
        "refer".to_string(),
        "refit".to_string(),
        "regal".to_string(),
        "rehab".to_string(),
        "reign".to_string(),
        "relax".to_string(),
        "relay".to_string(),
        "relic".to_string(),
        "remit".to_string(),
        "renal".to_string(),
        "renew".to_string(),
        "repay".to_string(),
        "repel".to_string(),
        "reply".to_string(),
        "rerun".to_string(),
        "reset".to_string(),
        "resin".to_string(),
        "retch".to_string(),
        "retro".to_string(),
        "retry".to_string(),
        "reuse".to_string(),
        "revel".to_string(),
        "revue".to_string(),
        "rhino".to_string(),
        "rhyme".to_string(),
        "rider".to_string(),
        "ridge".to_string(),
        "rifle".to_string(),
        "right".to_string(),
        "rigid".to_string(),
        "rigor".to_string(),
        "rinse".to_string(),
        "ripen".to_string(),
        "riper".to_string(),
        "risen".to_string(),
        "riser".to_string(),
        "risky".to_string(),
        "rival".to_string(),
        "river".to_string(),
        "rivet".to_string(),
        "roach".to_string(),
        "roast".to_string(),
        "robin".to_string(),
        "robot".to_string(),
        "rocky".to_string(),
        "rodeo".to_string(),
        "roger".to_string(),
        "rogue".to_string(),
        "roomy".to_string(),
        "roost".to_string(),
        "rotor".to_string(),
        "rouge".to_string(),
        "rough".to_string(),
        "round".to_string(),
        "rouse".to_string(),
        "route".to_string(),
        "rover".to_string(),
        "rowdy".to_string(),
        "rower".to_string(),
        "royal".to_string(),
        "ruddy".to_string(),
        "ruder".to_string(),
        "rugby".to_string(),
        "ruler".to_string(),
        "rumba".to_string(),
        "rumor".to_string(),
        "rupee".to_string(),
        "rural".to_string(),
        "rusty".to_string(),
        "sadly".to_string(),
        "safer".to_string(),
        "saint".to_string(),
        "salad".to_string(),
        "sally".to_string(),
        "salon".to_string(),
        "salsa".to_string(),
        "salty".to_string(),
        "salve".to_string(),
        "salvo".to_string(),
        "sandy".to_string(),
        "saner".to_string(),
        "sappy".to_string(),
        "sassy".to_string(),
        "satin".to_string(),
        "satyr".to_string(),
        "sauce".to_string(),
        "saucy".to_string(),
        "sauna".to_string(),
        "saute".to_string(),
        "savor".to_string(),
        "savoy".to_string(),
        "savvy".to_string(),
        "scald".to_string(),
        "scale".to_string(),
        "scalp".to_string(),
        "scaly".to_string(),
        "scamp".to_string(),
        "scant".to_string(),
        "scare".to_string(),
        "scarf".to_string(),
        "scary".to_string(),
        "scene".to_string(),
        "scent".to_string(),
        "scion".to_string(),
        "scoff".to_string(),
        "scold".to_string(),
        "scone".to_string(),
        "scoop".to_string(),
        "scope".to_string(),
        "score".to_string(),
        "scorn".to_string(),
        "scour".to_string(),
        "scout".to_string(),
        "scowl".to_string(),
        "scram".to_string(),
        "scrap".to_string(),
        "scree".to_string(),
        "screw".to_string(),
        "scrub".to_string(),
        "scrum".to_string(),
        "scuba".to_string(),
        "sedan".to_string(),
        "seedy".to_string(),
        "segue".to_string(),
        "seize".to_string(),
        "semen".to_string(),
        "sense".to_string(),
        "sepia".to_string(),
        "serif".to_string(),
        "serum".to_string(),
        "serve".to_string(),
        "setup".to_string(),
        "seven".to_string(),
        "sever".to_string(),
        "sewer".to_string(),
        "shack".to_string(),
        "shade".to_string(),
        "shady".to_string(),
        "shaft".to_string(),
        "shake".to_string(),
        "shaky".to_string(),
        "shale".to_string(),
        "shall".to_string(),
        "shalt".to_string(),
        "shame".to_string(),
        "shank".to_string(),
        "shape".to_string(),
        "shard".to_string(),
        "share".to_string(),
        "shark".to_string(),
        "sharp".to_string(),
        "shave".to_string(),
        "shawl".to_string(),
        "shear".to_string(),
        "sheen".to_string(),
        "sheep".to_string(),
        "sheer".to_string(),
        "sheet".to_string(),
        "sheik".to_string(),
        "shelf".to_string(),
        "shell".to_string(),
        "shied".to_string(),
        "shift".to_string(),
        "shine".to_string(),
        "shiny".to_string(),
        "shire".to_string(),
        "shirk".to_string(),
        "shirt".to_string(),
        "shoal".to_string(),
        "shock".to_string(),
        "shone".to_string(),
        "shook".to_string(),
        "shoot".to_string(),
        "shore".to_string(),
        "shorn".to_string(),
        "short".to_string(),
        "shout".to_string(),
        "shove".to_string(),
        "shown".to_string(),
        "showy".to_string(),
        "shrew".to_string(),
        "shrub".to_string(),
        "shrug".to_string(),
        "shuck".to_string(),
        "shunt".to_string(),
        "shush".to_string(),
        "shyly".to_string(),
        "siege".to_string(),
        "sieve".to_string(),
        "sight".to_string(),
        "sigma".to_string(),
        "silky".to_string(),
        "silly".to_string(),
        "since".to_string(),
        "sinew".to_string(),
        "singe".to_string(),
        "siren".to_string(),
        "sissy".to_string(),
        "sixth".to_string(),
        "sixty".to_string(),
        "skate".to_string(),
        "skier".to_string(),
        "skiff".to_string(),
        "skill".to_string(),
        "skimp".to_string(),
        "skirt".to_string(),
        "skulk".to_string(),
        "skull".to_string(),
        "skunk".to_string(),
        "slack".to_string(),
        "slain".to_string(),
        "slang".to_string(),
        "slant".to_string(),
        "slash".to_string(),
        "slate".to_string(),
        "slave".to_string(),
        "sleek".to_string(),
        "sleep".to_string(),
        "sleet".to_string(),
        "slept".to_string(),
        "slice".to_string(),
        "slick".to_string(),
        "slide".to_string(),
        "slime".to_string(),
        "slimy".to_string(),
        "sling".to_string(),
        "slink".to_string(),
        "sloop".to_string(),
        "slope".to_string(),
        "slosh".to_string(),
        "sloth".to_string(),
        "slump".to_string(),
        "slung".to_string(),
        "slunk".to_string(),
        "slurp".to_string(),
        "slush".to_string(),
        "slyly".to_string(),
        "smack".to_string(),
        "small".to_string(),
        "smart".to_string(),
        "smash".to_string(),
        "smear".to_string(),
        "smell".to_string(),
        "smelt".to_string(),
        "smile".to_string(),
        "smirk".to_string(),
        "smite".to_string(),
        "smith".to_string(),
        "smock".to_string(),
        "smoke".to_string(),
        "smoky".to_string(),
        "smote".to_string(),
        "snack".to_string(),
        "snail".to_string(),
        "snake".to_string(),
        "snaky".to_string(),
        "snare".to_string(),
        "snarl".to_string(),
        "sneak".to_string(),
        "sneer".to_string(),
        "snide".to_string(),
        "sniff".to_string(),
        "snipe".to_string(),
        "snoop".to_string(),
        "snore".to_string(),
        "snort".to_string(),
        "snout".to_string(),
        "snowy".to_string(),
        "snuck".to_string(),
        "snuff".to_string(),
        "soapy".to_string(),
        "sober".to_string(),
        "soggy".to_string(),
        "solar".to_string(),
        "solid".to_string(),
        "solve".to_string(),
        "sonar".to_string(),
        "sonic".to_string(),
        "sooth".to_string(),
        "sooty".to_string(),
        "sorry".to_string(),
        "sound".to_string(),
        "south".to_string(),
        "sower".to_string(),
        "space".to_string(),
        "spade".to_string(),
        "spank".to_string(),
        "spare".to_string(),
        "spark".to_string(),
        "spasm".to_string(),
        "spawn".to_string(),
        "speak".to_string(),
        "spear".to_string(),
        "speck".to_string(),
        "speed".to_string(),
        "spell".to_string(),
        "spelt".to_string(),
        "spend".to_string(),
        "spent".to_string(),
        "sperm".to_string(),
        "spice".to_string(),
        "spicy".to_string(),
        "spied".to_string(),
        "spiel".to_string(),
        "spike".to_string(),
        "spiky".to_string(),
        "spill".to_string(),
        "spilt".to_string(),
        "spine".to_string(),
        "spiny".to_string(),
        "spire".to_string(),
        "spite".to_string(),
        "splat".to_string(),
        "split".to_string(),
        "spoil".to_string(),
        "spoke".to_string(),
        "spoof".to_string(),
        "spook".to_string(),
        "spool".to_string(),
        "spoon".to_string(),
        "spore".to_string(),
        "sport".to_string(),
        "spout".to_string(),
        "spray".to_string(),
        "spree".to_string(),
        "sprig".to_string(),
        "spunk".to_string(),
        "spurn".to_string(),
        "spurt".to_string(),
        "squad".to_string(),
        "squat".to_string(),
        "squib".to_string(),
        "stack".to_string(),
        "staff".to_string(),
        "stage".to_string(),
        "staid".to_string(),
        "stain".to_string(),
        "stair".to_string(),
        "stake".to_string(),
        "stale".to_string(),
        "stalk".to_string(),
        "stall".to_string(),
        "stamp".to_string(),
        "stand".to_string(),
        "stank".to_string(),
        "stare".to_string(),
        "stark".to_string(),
        "start".to_string(),
        "stash".to_string(),
        "state".to_string(),
        "stave".to_string(),
        "stead".to_string(),
        "steak".to_string(),
        "steal".to_string(),
        "steam".to_string(),
        "steed".to_string(),
        "steel".to_string(),
        "steep".to_string(),
        "steer".to_string(),
        "stein".to_string(),
        "stern".to_string(),
        "stick".to_string(),
        "stiff".to_string(),
        "still".to_string(),
        "stilt".to_string(),
        "sting".to_string(),
        "stink".to_string(),
        "stint".to_string(),
        "stock".to_string(),
        "stoic".to_string(),
        "stoke".to_string(),
        "stole".to_string(),
        "stomp".to_string(),
        "stone".to_string(),
        "stony".to_string(),
        "stood".to_string(),
        "stool".to_string(),
        "stoop".to_string(),
        "store".to_string(),
        "stork".to_string(),
        "storm".to_string(),
        "story".to_string(),
        "stout".to_string(),
        "stove".to_string(),
        "strap".to_string(),
        "straw".to_string(),
        "stray".to_string(),
        "strip".to_string(),
        "strut".to_string(),
        "stuck".to_string(),
        "study".to_string(),
        "stuff".to_string(),
        "stump".to_string(),
        "stung".to_string(),
        "stunk".to_string(),
        "stunt".to_string(),
        "style".to_string(),
        "suave".to_string(),
        "sugar".to_string(),
        "suing".to_string(),
        "suite".to_string(),
        "sulky".to_string(),
        "sully".to_string(),
        "sumac".to_string(),
        "sunny".to_string(),
        "super".to_string(),
        "surer".to_string(),
        "surge".to_string(),
        "surly".to_string(),
        "sushi".to_string(),
        "swami".to_string(),
        "swamp".to_string(),
        "swarm".to_string(),
        "swash".to_string(),
        "swath".to_string(),
        "swear".to_string(),
        "sweat".to_string(),
        "sweep".to_string(),
        "sweet".to_string(),
        "swell".to_string(),
        "swept".to_string(),
        "swift".to_string(),
        "swill".to_string(),
        "swine".to_string(),
        "swing".to_string(),
        "swirl".to_string(),
        "swish".to_string(),
        "swoon".to_string(),
        "swoop".to_string(),
        "sword".to_string(),
        "swore".to_string(),
        "sworn".to_string(),
        "swung".to_string(),
        "synod".to_string(),
        "syrup".to_string(),
        "tabby".to_string(),
        "table".to_string(),
        "taboo".to_string(),
        "tacit".to_string(),
        "tacky".to_string(),
        "taffy".to_string(),
        "taint".to_string(),
        "taken".to_string(),
        "taker".to_string(),
        "tally".to_string(),
        "talon".to_string(),
        "tamer".to_string(),
        "tango".to_string(),
        "tangy".to_string(),
        "taper".to_string(),
        "tapir".to_string(),
        "tardy".to_string(),
        "tarot".to_string(),
        "taste".to_string(),
        "tasty".to_string(),
        "tatty".to_string(),
        "taunt".to_string(),
        "tawny".to_string(),
        "teach".to_string(),
        "teary".to_string(),
        "tease".to_string(),
        "teddy".to_string(),
        "teeth".to_string(),
        "tempo".to_string(),
        "tenet".to_string(),
        "tenor".to_string(),
        "tense".to_string(),
        "tenth".to_string(),
        "tepee".to_string(),
        "tepid".to_string(),
        "terra".to_string(),
        "terse".to_string(),
        "testy".to_string(),
        "thank".to_string(),
        "theft".to_string(),
        "their".to_string(),
        "theme".to_string(),
        "there".to_string(),
        "these".to_string(),
        "theta".to_string(),
        "thick".to_string(),
        "thief".to_string(),
        "thigh".to_string(),
        "thing".to_string(),
        "think".to_string(),
        "third".to_string(),
        "thong".to_string(),
        "thorn".to_string(),
        "those".to_string(),
        "three".to_string(),
        "threw".to_string(),
        "throb".to_string(),
        "throw".to_string(),
        "thrum".to_string(),
        "thumb".to_string(),
        "thump".to_string(),
        "thyme".to_string(),
        "tiara".to_string(),
        "tibia".to_string(),
        "tidal".to_string(),
        "tiger".to_string(),
        "tight".to_string(),
        "tilde".to_string(),
        "timer".to_string(),
        "timid".to_string(),
        "tipsy".to_string(),
        "titan".to_string(),
        "tithe".to_string(),
        "title".to_string(),
        "toast".to_string(),
        "today".to_string(),
        "toddy".to_string(),
        "token".to_string(),
        "tonal".to_string(),
        "tonga".to_string(),
        "tonic".to_string(),
        "tooth".to_string(),
        "topaz".to_string(),
        "topic".to_string(),
        "torch".to_string(),
        "torso".to_string(),
        "torus".to_string(),
        "total".to_string(),
        "totem".to_string(),
        "touch".to_string(),
        "tough".to_string(),
        "towel".to_string(),
        "tower".to_string(),
        "toxic".to_string(),
        "toxin".to_string(),
        "trace".to_string(),
        "track".to_string(),
        "tract".to_string(),
        "trade".to_string(),
        "trail".to_string(),
        "train".to_string(),
        "trait".to_string(),
        "tramp".to_string(),
        "trash".to_string(),
        "trawl".to_string(),
        "tread".to_string(),
        "treat".to_string(),
        "trend".to_string(),
        "triad".to_string(),
        "trial".to_string(),
        "tribe".to_string(),
        "trice".to_string(),
        "trick".to_string(),
        "tried".to_string(),
        "tripe".to_string(),
        "trite".to_string(),
        "troll".to_string(),
        "troop".to_string(),
        "trope".to_string(),
        "trout".to_string(),
        "trove".to_string(),
        "truce".to_string(),
        "truck".to_string(),
        "truer".to_string(),
        "truly".to_string(),
        "trump".to_string(),
        "trunk".to_string(),
        "truss".to_string(),
        "trust".to_string(),
        "truth".to_string(),
        "tryst".to_string(),
        "tubal".to_string(),
        "tuber".to_string(),
        "tulip".to_string(),
        "tulle".to_string(),
        "tumor".to_string(),
        "tunic".to_string(),
        "turbo".to_string(),
        "tutor".to_string(),
        "twang".to_string(),
        "tweak".to_string(),
        "tweed".to_string(),
        "tweet".to_string(),
        "twice".to_string(),
        "twine".to_string(),
        "twirl".to_string(),
        "twist".to_string(),
        "twixt".to_string(),
        "tying".to_string(),
        "udder".to_string(),
        "ulcer".to_string(),
        "ultra".to_string(),
        "umbra".to_string(),
        "uncle".to_string(),
        "uncut".to_string(),
        "under".to_string(),
        "undid".to_string(),
        "undue".to_string(),
        "unfed".to_string(),
        "unfit".to_string(),
        "unify".to_string(),
        "union".to_string(),
        "unite".to_string(),
        "unity".to_string(),
        "unlit".to_string(),
        "unmet".to_string(),
        "unset".to_string(),
        "untie".to_string(),
        "until".to_string(),
        "unwed".to_string(),
        "unzip".to_string(),
        "upper".to_string(),
        "upset".to_string(),
        "urban".to_string(),
        "urine".to_string(),
        "usage".to_string(),
        "usher".to_string(),
        "using".to_string(),
        "usual".to_string(),
        "usurp".to_string(),
        "utile".to_string(),
        "utter".to_string(),
        "vague".to_string(),
        "valet".to_string(),
        "valid".to_string(),
        "valor".to_string(),
        "value".to_string(),
        "valve".to_string(),
        "vapid".to_string(),
        "vapor".to_string(),
        "vault".to_string(),
        "vaunt".to_string(),
        "vegan".to_string(),
        "venom".to_string(),
        "venue".to_string(),
        "verge".to_string(),
        "verse".to_string(),
        "verso".to_string(),
        "verve".to_string(),
        "vicar".to_string(),
        "video".to_string(),
        "vigil".to_string(),
        "vigor".to_string(),
        "villa".to_string(),
        "vinyl".to_string(),
        "viola".to_string(),
        "viper".to_string(),
        "viral".to_string(),
        "virus".to_string(),
        "visit".to_string(),
        "visor".to_string(),
        "vista".to_string(),
        "vital".to_string(),
        "vivid".to_string(),
        "vixen".to_string(),
        "vocal".to_string(),
        "vodka".to_string(),
        "vogue".to_string(),
        "voice".to_string(),
        "voila".to_string(),
        "vomit".to_string(),
        "voter".to_string(),
        "vouch".to_string(),
        "vowel".to_string(),
        "vying".to_string(),
        "wacky".to_string(),
        "wafer".to_string(),
        "wager".to_string(),
        "wagon".to_string(),
        "waist".to_string(),
        "waive".to_string(),
        "waltz".to_string(),
        "warty".to_string(),
        "waste".to_string(),
        "watch".to_string(),
        "water".to_string(),
        "waver".to_string(),
        "waxen".to_string(),
        "weary".to_string(),
        "weave".to_string(),
        "wedge".to_string(),
        "weedy".to_string(),
        "weigh".to_string(),
        "weird".to_string(),
        "welch".to_string(),
        "welsh".to_string(),
        "wench".to_string(),
        "whack".to_string(),
        "whale".to_string(),
        "wharf".to_string(),
        "wheat".to_string(),
        "wheel".to_string(),
        "whelp".to_string(),
        "where".to_string(),
        "which".to_string(),
        "whiff".to_string(),
        "while".to_string(),
        "whine".to_string(),
        "whiny".to_string(),
        "whirl".to_string(),
        "whisk".to_string(),
        "white".to_string(),
        "whole".to_string(),
        "whoop".to_string(),
        "whose".to_string(),
        "widen".to_string(),
        "wider".to_string(),
        "widow".to_string(),
        "width".to_string(),
        "wield".to_string(),
        "wight".to_string(),
        "willy".to_string(),
        "wimpy".to_string(),
        "wince".to_string(),
        "winch".to_string(),
        "windy".to_string(),
        "wiser".to_string(),
        "wispy".to_string(),
        "witch".to_string(),
        "witty".to_string(),
        "woken".to_string(),
        "woman".to_string(),
        "women".to_string(),
        "woody".to_string(),
        "wooer".to_string(),
        "wooly".to_string(),
        "woozy".to_string(),
        "wordy".to_string(),
        "world".to_string(),
        "worry".to_string(),
        "worse".to_string(),
        "worst".to_string(),
        "worth".to_string(),
        "would".to_string(),
        "wound".to_string(),
        "woven".to_string(),
        "wrack".to_string(),
        "wrath".to_string(),
        "wreak".to_string(),
        "wreck".to_string(),
        "wrest".to_string(),
        "wring".to_string(),
        "wrist".to_string(),
        "write".to_string(),
        "wrong".to_string(),
        "wrote".to_string(),
        "wrung".to_string(),
        "wryly".to_string(),
        "yacht".to_string(),
        "yearn".to_string(),
        "yeast".to_string(),
        "yield".to_string(),
        "young".to_string(),
        "youth".to_string(),
        "zebra".to_string(),
        "zesty".to_string(),
        "zonal".to_string(),
    ];
    let word = &words[index];
    return word.clone();
}


fn send_packet(sender: &Sender<Packet>, address: SocketAddr, message_type: MessageType, payload: Vec<u8>) {
    let mut final_payload = vec![MAGIC_BYTE, message_type as u8];
    final_payload.extend(payload.iter());
    // print!("Sending packet to {}: {:?}", address, final_payload);

    sender.send(Packet::reliable_sequenced(address, final_payload, Some(0))).unwrap();
}

fn handle_packet(packet: &Packet, game: Arc<Mutex<Feudle>>, state: Arc<Mutex<ClientState>>) -> bool {
    let payload = packet.payload();
    // print!("Received packet: {:?}", payload);
    if payload[0] != MAGIC_BYTE {
        println!("Received packet with invalid magic byte");
        return false;
    }    
    let message_type = payload[1];
    let data = &payload[2..];
    //print message type as a string
    let message_type_string = match message_type {
        x if x == MessageType::AssignIdEvent as u8 => "AssignIdEvent",
        x if x == MessageType::StartEvent as u8 => "StartEvent",
        x if x == MessageType::GuessEvent as u8 => "GuessEvent",
        x if x == MessageType::EndEvent as u8 => "EndEvent",
        x  if x == MessageType::Heartbeat as u8 => "Heartbeat",
        _ => "Unknown",
    };
    // println!("Received {}", message_type_string);

    match message_type {
        x if x == MessageType::AssignIdEvent as u8 => {
            let assigned_id = data[0];
            // println!("Assigned ID {}", assigned_id);
            state.lock().unwrap().set_id(assigned_id as PlayerId);
            return false;
        },
        x if x == MessageType::StartEvent as u8 => {
            let index = data[0];
            let word = dictionary_words(index as usize);
            println!("Starting game with word {}", word);
            game.lock().unwrap().set_word(word.clone());
            state.lock().unwrap().set_word(word.to_uppercase());
            state.lock().unwrap().set_game_started(true);
            return true;
        },
        x if x == MessageType::GuessEvent as u8 => {
            let id = data[0];
            //get the guess
            let guess = String::from_utf8(data[1..].to_vec()).unwrap();
            // println!("Player {} guessed {}", id, guess);
            let mut color_vec = state.lock().unwrap().get_color_vec(guess.clone());
            print!("Opponent's Guess: {:?}\n", color_vec);
            io::stdout().flush().unwrap();
            //TODO: UPDATE OPPONENT GAME DANCE
            return true;
        },
        x if x == MessageType::EndEvent as u8 => {
            let id = data[0];
            state.lock().unwrap().set_game_over(true);
            if (id == state.lock().unwrap().get_id() as u8) {
                println!("You won!");
            } else {
                println!("You lost!");
            }
            return true;
        },
        x if x == MessageType::Heartbeat as u8 => {
            // println!("Received heartbeat");
            return false;
        },
        _ => {
            println!("Received unknown message type");
            return false;
        }
    }
}


fn main() -> Result<(), ErrorKind> {
    let mut socket: Socket;
    let config = Config {
        heartbeat_interval: Some(time::Duration::from_millis(10)),
        ..Config::default()
    };
    let mut port = 8432;
    let mut addr: String;
    loop {
        addr = format!("{}:{}", "127.0.0.1", port);
        match Socket::bind_with_config(&addr, config.clone()) {
            Ok(s) => {
                socket = s;
                break;
            },
            Err(_) => {
                port += 1;
            }
        };
    }
    // socket = Socket::bind_with_config("127.0.0.1:8452", config).unwrap();

    // Tell server to add the client
    let server_address = "127.0.0.1:8000".parse::<SocketAddr>().unwrap();
    let (sender, receiver) = (
        socket.get_packet_sender(), socket.get_event_receiver());
    send_packet(&sender, server_address, MessageType::JoinEvent, vec![]);
    socket.manual_poll(Instant::now());
    println!("Attempting to join server {}...", server_address);

    let game = Arc::new(Mutex::new(Feudle::new()));
    let state = Arc::new(Mutex::new(ClientState::new()));
    
    std::thread::sleep(time::Duration::from_millis(100));
    send_packet(&sender, server_address, MessageType::JoinEvent, vec![]);
    
    let game_cpy = game.clone();
    let sender_cpy = sender.clone();
    let state_cpy = state.clone();
    
    let _game_thread = thread::spawn(move || {
        while state_cpy.lock().unwrap().get_ready() == false {
            println!("Are you ready? (y/n)");
            let mut input = String::new();
            std::io::stdin().read_line(&mut &mut input).unwrap();
            input = input.trim().to_string();
            if input == "y" {
                state_cpy.lock().unwrap().set_ready(true);
                send_packet(&sender_cpy, server_address, MessageType::ReadyEvent, vec![state_cpy.lock().unwrap().get_id() as u8]);
            }
        }
        while state_cpy.lock().unwrap().get_game_started() == false {
            std::thread::sleep(time::Duration::from_millis(100));
        }
        loop {
        if state_cpy.lock().unwrap().get_game_over() == true {
            println!("Game over!");
            break;
        }
        println!("Guess a letter");
        let mut word_guess = String::new();
        std::io::stdin().read_line(&mut word_guess).expect("Failed to read line");
        word_guess = word_guess.trim().to_string();
        game_cpy.lock().unwrap().guess(&word_guess);
        let mut word_vec = word_guess.chars().collect::<Vec<char>>().iter().map(|c| *c as u8).collect::<Vec<_>>();
        let mut payload = vec![state_cpy.lock().unwrap().get_id() as u8];
        payload.append(&mut word_vec);
        send_packet(&sender_cpy, server_address, MessageType::GuessEvent, payload);
        game_cpy.lock().unwrap().print_word();

        if game_cpy.lock().unwrap().check_win() {
            let id = state_cpy.lock().unwrap().get_id();
            send_packet(&sender_cpy, server_address, MessageType::FinishEvent, vec![state_cpy.lock().unwrap().get_id()]);
            break;
        }
        if game_cpy.lock().unwrap().check_lose() {
            send_packet(&sender_cpy, server_address, MessageType::LoseEvent, vec![state_cpy.lock().unwrap().get_id()]);
            break;
        }
        
        // std::thread::sleep(time::Duration::from_millis(10));
    }
    });
    
    loop {
        if state.clone().lock().unwrap().get_game_over() == true {
            return Ok(());
        }
        socket.manual_poll(Instant::now());
        let mut should_update = false;
        if let Ok(event) = receiver.try_recv() {
            match event {
                SocketEvent::Packet(packet) => {
                    if packet.addr() == server_address {

                        should_update = handle_packet(&packet, game.clone(), state.clone());
                    }
                },
                _ => {}
            }
        }
        std::thread::sleep(time::Duration::from_millis(100));
    }
}


pub fn client() {
    main();
}